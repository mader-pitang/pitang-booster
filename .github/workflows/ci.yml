name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run unit tests
      run: mvn clean test
      working-directory: ./booster-c1m1
      env:
        SPRING_PROFILES_ACTIVE: test

    - name: Run integration tests
      run: mvn verify
      working-directory: ./booster-c1m1
      env:
        SPRING_PROFILES_ACTIVE: test

    - name: Generate code coverage report
      run: mvn jacoco:report
      working-directory: ./booster-c1m1

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./booster-c1m1/target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Compile project
      run: mvn clean compile
      working-directory: ./booster-c1m1

    - name: Run Checkstyle
      run: mvn checkstyle:check
      working-directory: ./booster-c1m1
      continue-on-error: true

    - name: Run PMD
      run: mvn pmd:check
      working-directory: ./booster-c1m1
      continue-on-error: true

    - name: Run SpotBugs
      run: mvn spotbugs:check
      working-directory: ./booster-c1m1
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build application
      run: mvn clean package -DskipTests
      working-directory: ./booster-c1m1

    - name: Build Docker image
      run: docker build -t booster-c1m1:${{ github.sha }} .
      if: hashFiles('Dockerfile') != ''

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: booster-c1m1/target/*.jar

  openapi-validation:
    runs-on: ubuntu-latest
    needs: [build]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifact
        path: booster-c1m1/target/

    - name: Start application
      run: |
        java -jar booster-c1m1/target/*.jar &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV
        sleep 30
      env:
        SPRING_PROFILES_ACTIVE: test
        SERVER_PORT: 8080

    - name: Validate OpenAPI spec
      run: |
        curl -f http://localhost:8080/v3/api-docs > openapi.json
        echo "OpenAPI specification generated successfully"

    - name: Validate Swagger UI
      run: |
        curl -f http://localhost:8080/swagger-ui/index.html
        echo "Swagger UI is accessible"

    - name: Stop application
      run: kill $APP_PID || true
      if: always()

    - name: Upload OpenAPI spec
      uses: actions/upload-artifact@v4
      with:
        name: openapi-spec
        path: openapi.json
      if: success()